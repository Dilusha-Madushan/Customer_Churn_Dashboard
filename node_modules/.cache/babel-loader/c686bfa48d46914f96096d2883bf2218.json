{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Alert from 'react-popup-alert';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar() {\n  _s();\n\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const [alert, setAlert] = React.useState({\n    type: 'error',\n    text: 'This is a alert message',\n    show: false\n  });\n\n  async function handleLogout() {\n    try {\n      await logout();\n      navigate('/login');\n    } catch {\n      onShowAlert('error');\n    }\n  }\n\n  function onCloseAlert() {\n    setAlert({\n      type: '',\n      text: '',\n      show: false\n    });\n  }\n\n  function onShowAlert(type) {\n    setAlert({\n      type: type,\n      text: 'Logout is failed!',\n      show: true\n    });\n  }\n\n  const [menuCollapse, setMenuCollapse] = useState(false); //create a custom function that will change menucollapse state from false to true and true to false\n\n  const menuIconClick = () => {\n    //condition checking to change state from true to false and vice versa\n    menuCollapse ? setMenuCollapse(false) : setMenuCollapse(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Sidebar, \"fK4VVMTb022BS0Ds473SlADqW5I=\", false, function () {\n  return [useAuth, useNavigate];\n});\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","ProSidebar","Menu","MenuItem","SubMenu","useNavigate","useAuth","Alert","Sidebar","currentUser","logout","navigate","alert","setAlert","type","text","show","handleLogout","onShowAlert","onCloseAlert","menuCollapse","setMenuCollapse","menuIconClick"],"sources":["C:/Users/HP/Desktop/DS Challenge/Customer_Churn_Dashboard/src/components/Sidebar.js"],"sourcesContent":["import React , {useState} from \"react\"\r\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport Alert from 'react-popup-alert'\r\n\r\nexport default function Sidebar() {\r\n\r\n    const { currentUser, logout } = useAuth()\r\n    const navigate = useNavigate();\r\n\r\n    const [alert, setAlert] = React.useState({\r\n        type: 'error',\r\n        text: 'This is a alert message',\r\n        show: false\r\n      })\r\n\r\n    async function handleLogout() {\r\n        \r\n\r\n        try {\r\n        await logout()\r\n        navigate('/login');\r\n        } catch {\r\n\r\n            onShowAlert('error')\r\n       \r\n        }\r\n    }\r\n\r\n    function onCloseAlert() {\r\n        setAlert({\r\n          type: '',\r\n          text: '',\r\n          show: false\r\n        })\r\n      }\r\n    \r\n      function onShowAlert(type) {\r\n        setAlert({\r\n          type: type,\r\n          text: 'Logout is failed!',\r\n          show: true\r\n        })\r\n      }\r\n\r\n    const [menuCollapse, setMenuCollapse] = useState(false)\r\n\r\n    //create a custom function that will change menucollapse state from false to true and true to false\r\n    const menuIconClick = () => {\r\n        //condition checking to change state from true to false and vice versa\r\n        menuCollapse ? setMenuCollapse(false) : setMenuCollapse(true);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,mBAApD;AACA,OAAO,uCAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAEA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAE9B,MAAM;IAAEC,WAAF;IAAeC;EAAf,IAA0BJ,OAAO,EAAvC;EACA,MAAMK,QAAQ,GAAGN,WAAW,EAA5B;EAEA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACC,QAAN,CAAe;IACrCc,IAAI,EAAE,OAD+B;IAErCC,IAAI,EAAE,yBAF+B;IAGrCC,IAAI,EAAE;EAH+B,CAAf,CAA1B;;EAMA,eAAeC,YAAf,GAA8B;IAG1B,IAAI;MACJ,MAAMP,MAAM,EAAZ;MACAC,QAAQ,CAAC,QAAD,CAAR;IACC,CAHD,CAGE,MAAM;MAEJO,WAAW,CAAC,OAAD,CAAX;IAEH;EACJ;;EAED,SAASC,YAAT,GAAwB;IACpBN,QAAQ,CAAC;MACPC,IAAI,EAAE,EADC;MAEPC,IAAI,EAAE,EAFC;MAGPC,IAAI,EAAE;IAHC,CAAD,CAAR;EAKD;;EAED,SAASE,WAAT,CAAqBJ,IAArB,EAA2B;IACzBD,QAAQ,CAAC;MACPC,IAAI,EAAEA,IADC;MAEPC,IAAI,EAAE,mBAFC;MAGPC,IAAI,EAAE;IAHC,CAAD,CAAR;EAKD;;EAEH,MAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,KAAD,CAAhD,CAxC8B,CA0C9B;;EACA,MAAMsB,aAAa,GAAG,MAAM;IACxB;IACAF,YAAY,GAAGC,eAAe,CAAC,KAAD,CAAlB,GAA4BA,eAAe,CAAC,IAAD,CAAvD;EACH,CAHD;;EAMA,oBACI,qCADJ;AAMH;;GAvDuBb,O;UAEYF,O,EACfD,W;;;KAHGG,O"},"metadata":{},"sourceType":"module"}